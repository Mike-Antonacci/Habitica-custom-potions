// This code is licensed under the same terms as Habitica:
    // https://raw.githubusercontent.com/HabitRPG/habitrpg/develop/LICENSE

/* ========================================== */
/* [Users] Required script data to fill in    */
/* ========================================== */
const USER_ID = "PasteYourUserIdHere";
const API_TOKEN = "PasteYourApiTokenHere"; // Do not share this to anyone
const WEB_APP_URL = "PasteGeneratedWebAppUrlHere";

/* ========================================== */
/* [Users] Required customizations to fill in */
/* ========================================== */

/* ========================================== */
/* [Users] Optional customizations to fill in */
/* ========================================== */

// Change the 1 to a 0 if you don't want to get private message notifications (such as if you're already at max Mana or exceeded the limit for daily potion usage) 
consts NOTIFICATIONS_ON = 1; 

/* ========================================== */
/* [Users] Do not edit code below this line   */
/* ========================================== */
const AUTHOR_ID = "0034eb14-b4d8-494e-8386-d3f33cff7922";
const SCRIPT_NAME = "Custom Potions";
const HEADERS = {
  "x-client" : AUTHOR_ID + "-" + SCRIPT_NAME,
  "x-api-user" : USER_ID,
  "x-api-key" : API_TOKEN,
}

//One-time, set up Experience Potion. It's separate in case someone only wants one potion.
function doExperienceSetup() {
   https://habitica.com/api/v3/tasks/user
  {
    "text": "**Experience Potion** ![Yellow potion](https://github.com/Mike-Antonacci/Habitica-custom-potions/blob/master/experience%20potion%20transparent%20wide%20432.png)",
    "type": "reward",
    "notes": "Gain 150 Experience (Instant Use)",
    "value": "25"
  }
}

//One-time, set up Mana Potion. It's separate in case someone only wants one potion.
function doManaSetup() {
  https://habitica.com/api/v3/tasks/user
  {
    "text": "**Mana Potion** ![Blue potion](https://github.com/Mike-Antonacci/Habitica-custom-potions/blob/master/mana%20potion%20transparent%20wide%20432.png)",
    "type": "reward",
    "notes": "Recover 30 Mana (Instant Use)",
    "value": "25"
  }
}




// put at the bottom. I'll likely use api_getUserInfo("stats") a lot

//Gets user info so I can use it, especially stats like mana, experience, and level
function api_getUserInfo(userFields) {
  const params = {
    "method" : "get",
    "headers" : HEADERS,
    "muteHttpExceptions" : true,
  }
  
  var url = "https://habitica.com/api/v3/user";
  if (userFields != "") {
    url += "?userFields=" + userFields;
  }

  const response = UrlFetchApp.fetch(url, params);
  user = JSON.parse(response).data;
  return response;
}

// Changing stats
function api_changeStats(hp, mp, exp, gp) {
  const payload = {
    "stats.hp" : hp,
    "stats.mp" : mp,
    "stats.exp" : exp,
    "stats.gp" : gp,
  }
  
  const params = {
    "method" : "put",
    "headers" : HEADERS,
    "contentType" : "application/json",
    "payload" : JSON.stringify(payload),
    "muteHttpExceptions" : true,
  }
  
  const url = "https://habitica.com/api/v3/user";
  return UrlFetchApp.fetch(url, params);
}

// Send a private message (as a notification). Make sure to check if notifications are disabled.
function api_sendPrivateMessage(message, toUserId) {
  const payload = {
    "message" : message,
    "toUserId" : toUserId,
  }
  
  const params = {
    "method" : "post",
    "headers" : HEADERS,
    "contentType" : "application/json",
    "payload" : JSON.stringify(payload),
    "muteHttpExceptions" : true,
  }
  
  const url = "https://habitica.com/api/v3/members/send-private-message";
  return UrlFetchApp.fetch(url, params);
}





//STILL TO DO
  test out how the image looks for the custom reward (placing, etc.) and also the size of the potion title

/* ANYTHING BELOW THIS LINE IS PSUEDOCODE, NOT ACTUAL CODE. I'M TRYING TO GET A FEEL FOR HOW I'D DO THIS */
click reward = score task = trigger script to adjust stats (MP or XP)
  https://habitica.com/apidoc/#api-Webhook-AddWebhook
  
// Experience Potion use
function runXp() {
  const response = api_getUserInfo("stats");
  var lvl = user.stats.lvl;
  var hp = user.stats.hp;
  var mp = user.stats.mp;
  var exp = user.stats.exp;
  var gp = user.stats.gp;
  
  // Check for level lock
  switch (LevelLockXp){
    // If it fails, send failure message if notifications are on, and refund the money
    case lvl < 21:
      api_changeStats(hp, mp, exp, gp + 25); // Refund the money
      switch (notificationsOn){ // Check if notifications are on, send message if yes
        case NOTIFICATIONS_ON = 1:
          api_sendPrivateMessage("Must be at least level 21 to use this potion.", USER_ID);
          break;
        case NOTIFICATIONS_ON = 0:
          break;
      }
      break;
    // If it passes, then check if run the potion like normal
    case lvl >= 21:
      api_changeStats(hp, mp, exp + 150, gp);
      break;
  }
}

// Mana Potion use
// BASICALLY THE SAME AS ABOVE (WAIT UNTIL IT'S DONE BEFORE I TRY MORE BELOW) but also the following additions:
  var int = user.stats.int;
  var maxMp = (2 * int) + 30;
  var mpDiff = maxMp - mp;
  
  //and more additions (nested case)
    // if level lock passes, cehck to see if near maximum Mana
      switch (nearMaxMp){
        // Adding +30 Mana won't put them at or beyond maximum
        case mpDiff <= 30:
          api_changeStats(hp, mp + 30, exp, gp);
          break;
        // Already at maximum Mana, so cause potion to fail
        case mpDiff = 0:
          api_changeStats(hp, mp, exp, gp + 25);
          api_sendPrivateMessage("You already have maximum Mana.", USER_ID);
          break;
        // Close to maximum Mana, so refill to max but not beyond
        case mpDiff > 30:
          api_changeStats(hp, mp + mpDiff, exp, gp);
          api_sendPrivateMessage("This potion filled you to maximum Mana, but not beyond the max.", USER_ID);
          break;
      }

// USAGE LIMITS. FIGURE OUT HOW TO GET COUNTERS TO RESET AT CRON
  Mana: Limit 4 per day
  Experience: no more than 1/3 of level's XP can be bought in potions
  var xpToNextLevel : ( (lvl * lvl) * 0.25) + (10 * lvl)  + 139.75
    // FIGURE OUT HOW TO ROUND TO NEAREST 10s, ADD TO FORMULA ABOVE
    var maxXpPotion : ( (xpToNextLevel / 3) / 150)
      // ROUND DOWN TO NEAREST INTEGER, ADD TO FORMULA ABOVE
      
      // stuff from Eugene for resetting counter (look up how he uses "totalUsage" in his code)
        // If new day, reset total HP paid counter
          if (cronCount != user.flags.cronCount) {
            cronCount = user.flags.cronCount;
            totalUsage = 0;
          }
        // How to calculate XP needed to next level, but I'll have to adapt this from him
          exp += Math.round((Math.pow(user.stats.lvl, 2) * 0.25 + 10 * user.stats.lvl + 139.75) / 10) * 10;
        // how to round down
          Math.floor(Java stuff)
      

some Constants I like from https://raw.githubusercontent.com/elrgarcia/Habitica-Warrior-Subclasses/master/Code.txt
  max total HP paid fail
  Max usage failed
  noHP fail
  no MP fail

other things I like:
  create webhook and get webhook, though I don't fully understand how those work
